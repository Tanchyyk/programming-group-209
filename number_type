'''
'''
# IMPORTANT: do not forget about thoughtful documentation
#
#
# TODO: checking for prime and ulam numbers
# TODO: I'm not sure, whether the main function is needed here,
# I think, that if there gonna be playing modes
# (like to find prime number or the other type)
# it would be better for functions to return bool value.
#
# However, the main function will be needed, if we need
# to find what type of number is inputed.


def number_type(number: int) -> str:
    '''

    '''

    if number < 0 or not isinstance(number, int):
        return 'usage: num should be natural number'
    
    number_type = ''
    # TODO: it is not good to call the function two times here
    if happy_number(number):
        number_type = happy_number(number)
    # if prime_number(number):
    #     number_type = prime_number(number)
    # if ulam_number(number):
    #     number_type = ulam_number

    # number_type = 'bad_number'

    return number_type


def happy_number(number: int) ->str:
    '''
    This function determines whether the number is lucky;

    Takes num - a natural number.
    Returns the default value of True or False.

    >>> happy_number(43211234)
    True
    >>> happy_number(4321123)
    False
    >>> happy_number('43211234')
    True
    >>> happy_number('-43211234')
    'usage: num should be natural number'
    >>> happy_number('five')
    'usage: num should be natural number'
    '''

    # fills the number with 0 (at the beggining),
    # while its lenght is not equal to 8
    number = str(number).rjust(8,'0')
    first_half = number[:4]
    second_half = number[4:]

    # counts sums of the first and the last 4 digits
    sum_of_first_half = 0
    sum_of_second_half = 0
    try:
        for digit in range(4):  # range == 4, because the number is 8 digits long
            sum_of_first_half += int(first_half[digit])
        for digit in range(4):
            sum_of_second_half += int(second_half[digit])
    except ValueError:
        return 'usage: num should be natural number'

    # returns True if the sum of first 4 digits is equal to
    # the sum of the last 4
    if sum_of_first_half == sum_of_second_half:
        number_type = 'lucky number'

    return number_type

def prime_number(number: int) -> str:
    '''

    '''

    pass

def ulam_number(number: int) -> str:
    '''

    '''

    pass
